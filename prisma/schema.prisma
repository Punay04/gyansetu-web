generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Teacher {
  id          String      @id @default(uuid())
  name        String
  email       String      @unique
  password    String
  classes     Class[]
  students    Student[]
  alerts      Alert[]     // opposite relation for Alert.teacher
  createdAt   DateTime    @default(now())
}

model Class {
  id        String     @id @default(uuid())
  section  String     // e.g. "A", "B"
  grade     String     // e.g. "10th", "9th"
  teacher   Teacher    @relation(fields: [teacherId], references: [id])
  teacherId String
  students  Student[]
  createdAt DateTime   @default(now())
}

model Student {
  id            String         @id @default(uuid())
  name          String
  email         String         @unique
  password      String
  class         Class?         @relation(fields: [classId], references: [id])
  classId       String?
  teacher       Teacher        @relation(fields: [teacherId], references: [id])
  teacherId     String
  analytics     Analytics[]
  achievements  Achievement[]
  parentContact String?        // for parent connect (phone/email)
  createdAt     DateTime       @default(now())
}

model Analytics {
  id         String   @id @default(uuid())
  student    Student  @relation(fields: [studentId], references: [id])
  studentId  String
  progress   Int?     // % completion
  points     Int?     // XP / points
  streak     Int?     // learning streak (days)
  timeSpent  Int?     // in minutes
  createdAt  DateTime @default(now())
}

model Achievement {
  id        String   @id @default(uuid())
  student   Student  @relation(fields: [studentId], references: [id])
  studentId String
  badge     String   // e.g. "Star of the Week"
  awardedAt DateTime @default(now())
}

model Alert {
  id        String   @id @default(uuid())
  teacher   Teacher  @relation(fields: [teacherId], references: [id])
  teacherId String
  message   String   // e.g. "5 students haven't logged in for 3 days"
  severity  String   // low / medium / high
  createdAt DateTime @default(now())
}